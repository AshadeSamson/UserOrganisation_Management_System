{
    "openapi":"3.0.0",
    "info":{
        "title": "User/Organisation Management API",
        "version": "1.1.0",
        "description": "User/Organisation Management API",
        "contact": {
          "name": "API Support/Assistance",
          "url": "https://ashadesamson.me",
          "email": "ashadesamson99@gmail.com"
        }
    },
    "servers":[
        {
            "url": "https://user-org-system.vercel.app/",
            "description": "Main (production) server"
        }
    ],
    "tags": [
        {
            "name": "Authentication",
            "description": "Endpoints related to user authentication (register, login)"
        },
        {
            "name": "User",
            "description": "Endpoints related to user-organisation operations"
        }
    ],
    "components":{
        "schemas":{
            "User":{
                "type": "object",
                "properties": {
                    "userId":{ "type": "string", "example": "xghhsdjkj2536748"},
                    "firstName": { "type": "string", "example": "John"},
                    "lastName": { "type": "string", "example": "Doe"},
                    "email": { "type": "string", "format": "email", "example": "johndoe@example.com"},
                    "password": { "type": "string", "format": "password", "example": "pass_word!123"},
                    "phone": { "type": "string", "example": "+2340987654321"}
                }
            },
            "returnedUser":{
                "type": "object",
                "properties": {
                    "userId":{ "type": "string", "example": "xghhsdjkj2536748"},
                    "firstName": { "type": "string", "example": "John"},
                    "lastName": { "type": "string", "example": "Doe"},
                    "email": { "type": "string", "format": "email", "example": "johndoe@example.com"},
                    "phone": { "type": "string", "example": "+2340987654321"}
                }
            },
            "Organisation":{
                "type": "object",
                "properties": {
                    "orgId": { "type": "string", "example": "gdwu4537238"},
                    "name": { "type": "string", "example": "John's Organisation"},
                    "description": { "type": "string", "example": "description"}
                }
            },
            "OrganisationRequest": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "description": { "type": "string" }
                }
            },
            "registerRequest": {
                "type": "object",
                "properties": {
                    "firstName": {"$ref": "#/components/schemas/User/properties/firstName"},
                    "lastName": {"$ref": "#/components/schemas/User/properties/lastName"},
                    "email": {"$ref": "#/components/schemas/User/properties/email"},
                    "password": {"$ref": "#/components/schemas/User/properties/password"},
                    "phone": {"$ref": "#/components/schemas/User/properties/phone"}
                },
                "required": ["firstName", "lastName", "email", "password", "phone"]
            },
            "loginRequest": {
                "type": "object",
                "properties": {
                    "email": {"$ref": "#/components/schemas/User/properties/email"},
                    "password": {"$ref": "#/components/schemas/User/properties/password"}
                },
                "required": ["email", "password"]
            },
            "AddUserRequest": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string" }
                }
              }
        }
    },
    "paths":{
        "/auth/register": {
            "post": {
                "summary": "Register a new user",
                "description": "Registers a new user with a first name, last name, email, password, and phone number.",
                "tags": ["Authentication"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "applicaiton/json": {
                            "schema": {"$ref": "#/components/schemas/registerRequest"}
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Registration succesful",
                        "content": {
                            "applicaiton/json": {
                                "schema": {
                                    "type":"object",
                                    "properties": {
                                        "status": { "type": "string", "example": "success"},
                                        "message": { "type": "string", "example": "Registration successful"},
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "accessToken": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5..."},
                                                "user": {"$ref": "#/components/schemas/returnedUser"}
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "applicaiton/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": { "type": "string", "example": "Bad request"},
                                        "message": { "type": "string", "example": "Registration unsuccessful"}
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "summary": "Login an existing user",
                "description": "Authenticates a user and returns a JWT token for further access.",
                "tags": ["Authentication"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "applicaiton/json": {
                            "schema": {"$ref": "#/components/schemas/loginRequest"}
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login succesful",
                        "content": {
                            "applicaiton/json": {
                                "schema": {
                                    "type":"object",
                                    "properties": {
                                        "status": { "type": "string", "example": "success"},
                                        "message": { "type": "string", "example": "Login successful"},
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "accessToken": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5..."},
                                                "user": {"$ref": "#/components/schemas/returnedUser"}
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Bad request",
                        "content": {
                            "applicaiton/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": { "type": "string", "example": "Bad request"},
                                        "message": { "type": "string", "example": "Authentication failed"}
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "summary": "Get user record",
                "description": "retrieve a user record through the user ID",
                "tags": ["User"],
                "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "required": true,
                      "description": "The ID of the user to retrieve",
                      "schema": {
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                        "description": "User retrieved successfully",
                        "content": {
                            "application/json": {
                              "schema": {
                                "type":"object",
                                "properties":{
                                    "status": { "type": "string", "example": "success"},
                                    "message": { "type": "string", "example": "User retrieved successfully"},
                                    "data": { "$ref": "#/components/schemas/returnedUser"}
                                }
                              }
                            }
                          }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                              "schema": {
                                "type":"object",
                                "properties":{
                                    "status": { "type": "string", "example": "Not found"},
                                    "message": { "type": "string", "example": "User not found"}
                                }
                              }
                            }
                          }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                              "schema": {
                                "type":"object",
                                "properties":{
                                    "status": { "type": "string", "example": "error"},
                                    "message": { "type": "string", "example": "An error occured"}
                                }
                              }
                            }
                          }
                    }
                  }
            }
        },
        "/api/organisations": {
            "get": {
                "summary": "Get user's organisations",
                "description": "retrieves a list of organisations associated with the authenticated user",
                "tags": ["User"],
                  "responses": {
                    "200": {
                        "description": "Organisations retrieved successfully",
                        "content": {
                            "application/json": {
                              "schema": {
                                "type":"object",
                                "properties":{
                                    "status": { "type": "string", "example": "success"},
                                    "message": { "type": "string", "example": "Organisations retrieved successfully"},
                                    "data": { "$ref": "#/components/schemas/Organisation"}
                                }
                              }
                            }
                          }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                              "schema": {
                                "type":"object",
                                "properties":{
                                    "status": { "type": "string", "example": "Not found"},
                                    "message": { "type": "string", "example": "User not found"}
                                }
                              }
                            }
                          }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                              "schema": {
                                "type":"object",
                                "properties":{
                                    "status": { "type": "string", "example": "error"},
                                    "message": { "type": "string", "example": "An error occured"}
                                }
                              }
                            }
                          }
                    }
                  }
            },
            "post": {
                "summary": "Create an organisation",
                "description": "allows authenticated users to create a new organisation",
                "tags": ["User"],
                "requestBody": {
                    "required": true,
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/OrganisationRequest"
                        }
                      }
                    }
                  },
                  "responses": {
                    "201": {
                        "description": "Organisation created successfully",
                        "content": {
                            "application/json": {
                              "schema": {
                                "type":"object",
                                "properties":{
                                    "status": { "type": "string", "example": "success"},
                                    "message": { "type": "string", "example": "Organisation created successfully"},
                                    "data": { "$ref": "#/components/schemas/Organisation"}
                                }
                              }
                            }
                          }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                              "schema": {
                                "type":"object",
                                "properties":{
                                    "status": { "type": "string", "example": "Bad request"},
                                    "message": { "type": "string", "example": "Client error"}
                                }
                              }
                            }
                          }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                              "schema": {
                                "type":"object",
                                "properties":{
                                    "status": { "type": "string", "example": "error"},
                                    "message": { "type": "string", "example": "An error occured"}
                                }
                              }
                            }
                          }
                    }
                  }
            }
        },
        "/api/organisations/{orgId}": {
            "get": {
                "summary": "Get organisation by ID",
                "description": "retrieve detailed information about a specific organisation by its unique identifier (ID)",
                "tags": ["User"],
                "parameters": [
                    {
                      "name": "orgId",
                      "in": "path",
                      "required": true,
                      "description": "The ID of the organisation to retrieve",
                      "schema": {
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                        "description": "Organisation retrieved successfully",
                        "content": {
                            "application/json": {
                              "schema": {
                                "type":"object",
                                "properties":{
                                    "status": { "type": "string", "example": "success"},
                                    "message": { "type": "string", "example": "Organisation retrieved successfully"},
                                    "data": { "$ref": "#/components/schemas/Organisation"}
                                }
                              }
                            }
                          }
                    },
                    "404": {
                        "description": "Organisation not found",
                        "content": {
                            "application/json": {
                              "schema": {
                                "type":"object",
                                "properties":{
                                    "status": { "type": "string", "example": "Not found"},
                                    "message": { "type": "string", "example": "Organisation not found"}
                                }
                              }
                            }
                          }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                              "schema": {
                                "type":"object",
                                "properties":{
                                    "status": { "type": "string", "example": "error"},
                                    "message": { "type": "string", "example": "An error occured"}
                                }
                              }
                            }
                          }
                    }
                  }
            }
        },
        "/api/organisations/{ordId}/users": {
            "post": {
                "tags": ["User"],
                "summary": "Add user to organisation",
                "description": "enables authenticated users to add an existing user to a specified organisation",
                "parameters": [
                  {
                    "name": "orgId",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the organisation",
                    "schema": {
                      "type": "string"
                    }
                  }
                ],
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/AddUserRequest"
                      }
                    }
                  }
                },
                "responses": {
                    "200": {
                        "description": "User added to organisation successfully",
                        "content": {
                            "application/json": {
                              "schema": {
                                "type":"object",
                                "properties":{
                                    "status": { "type": "string", "example": "success"},
                                    "message": { "type": "string", "example": "User added to organisation successfully"}
                                }
                              }
                            }
                          }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                              "schema": {
                                "type":"object",
                                "properties":{
                                    "status": { "type": "string", "example": "Not Found"},
                                    "message": { "type": "string", "example": "User or Organisation not found"}
                                }
                              }
                            }
                          }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                              "schema": {
                                "type":"object",
                                "properties":{
                                    "status": { "type": "string", "example": "error"},
                                    "message": { "type": "string", "example": "An error occured"}
                                }
                              }
                            }
                          }
                    }
                  }
              }
        }
    }
}